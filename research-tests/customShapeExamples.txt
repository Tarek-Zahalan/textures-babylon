// You have to create a function called createScene. This function must return a BABYLON.Scene object


var createScene = function() {
	var scene = new BABYLON.Scene(engine);
	var camera = new BABYLON.ArcRotateCamera("Camera", -Math.PI/2, Math.PI/4, 25, BABYLON.Vector3.Zero(), scene);
	camera.attachControl(canvas, true);

    var light = new BABYLON.HemisphericLight("light1", new BABYLON.Vector3(0, 10, 0), scene);
    light.intensity = 0.5;

    var corners = [ new BABYLON.Vector2(4, -4),
                    new BABYLON.Vector2(2, 0),
                    new BABYLON.Vector2(5, 2),
                    new BABYLON.Vector2(1, 2),
                    new BABYLON.Vector2(-5, 5),
                    new BABYLON.Vector2(-3, 1),
                    new BABYLON.Vector2(-4, -4),
                    new BABYLON.Vector2(-2, -3),
                    new BABYLON.Vector2(2, -3),
              ];
          
    var poly_tri = new BABYLON.PolygonMeshBuilder("polytri", corners, scene);
    var polygon = poly_tri.build(null, 0.5);
    polygon.position.y = + 4;

    var poly_path = new BABYLON.Path2(2, 0);
    poly_path.addLineTo(5, 2);
    poly_path.addLineTo(1, 2);
    poly_path.addLineTo(-5, 5);
    poly_path.addLineTo(-3, 1);
    poly_path.addLineTo(-4, -4);
    poly_path.addArcTo(0, -2, 4, -4, 100);

    var poly_tri2 = new BABYLON.PolygonMeshBuilder("polytri2", poly_path, scene);
    var polygon2 = poly_tri2.build(false, 0.5); //updatable, extrusion depth - both optional
    polygon2.position.y = -4;

	return scene;
};